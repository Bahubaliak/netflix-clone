{"version":3,"sources":["axios.js","Row.js","requests.js","Navbar.js","Banner.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","request","data","results","fetchData","className","map","movie","src","poster_path","backdrop_path","alt","name","onClick","movieTrailer","tmdbId","id","then","url","urlParams","URLSearchParams","URL","search","catch","err","console","log","handleClick","YouTube","videoId","opts","height","width","playerVars","autoplay","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumantaries","Navbar","show","handleShow","window","addEventListener","scrollY","removeEventListener","Banner","str","n","setMovie","Math","floor","random","length","style","backgroundSize","backgroundImage","original_name","overview","substr","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fbdadf9a.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst instance = axios.create({\n\tbaseURL: 'https://api.themoviedb.org/3',\n});\n\nexport default instance;\t","import React, { useState, useEffect } from 'react';\nimport axios from './axios';\nimport YouTube from 'react-youtube';\nimport movieTrailer from 'movie-trailer';\nimport './Row.css'\n\nconst baseUrl = 'https://image.tmdb.org/t/p/original/';\n\nfunction Row({ title, fetchUrl, isLargeRow }) {\n\tconst [movies, setMovies] = useState([]);\n\tconst [trailerUrl, setTrailerUrl] = useState(null);\n\n\tuseEffect(() => {\n\t\tasync function fetchData() {\n\t\t\tconst request = await axios.get(fetchUrl);\n\t\t\tsetMovies(request.data.results);\n\t\t}\n\t\tfetchData();\n\t}, [fetchUrl])\n\n\tconst opts = {\n\t\theight: \"390\",\n\t\twidth: \"100%\",\n\t\tplayerVars: {\n\t\t\tautoplay: 1,\n\t\t}\n\t}\n\n\tconst handleClick = (movie) => {\n\t\tif (trailerUrl) {\n\t\t\tsetTrailerUrl(null);\n\t\t} else {\n\t\t\tmovieTrailer(null, { tmdbId: movie?.id })\n\t\t\t\t.then((url) => {\n\t\t\t\t\tconst urlParams = new URLSearchParams(new URL(url).search)\n\t\t\t\t\tsetTrailerUrl(urlParams.get('v'))\n\t\t\t\t})\n\t\t\t\t.catch((err) => console.log(err));\n\t\t}\n\t}\n\n\treturn (\n\t\t<div className=\"row\">\n\t\t\t<h2>{title}</h2>\n\t\t\t<div className=\"row__posters\">\n\t\t\t\t{movies.map((movie) => (\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc={`${baseUrl}${isLargeRow ? movie.poster_path : movie.backdrop_path}`}\n\t\t\t\t\t\talt={movie.name}\n\t\t\t\t\t\tkey={movie.id}\n\t\t\t\t\t\tclassName={`row__poster ${isLargeRow && 'row__posterLarge'}`}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\thandleClick(movie)\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t\t{ trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\n\t\t</div>\n\t);\n}\n\nexport default Row;","const API_KEY = 'a1a196eccf0a1e8446aa9020a29f7ded';\n\nconst requests = {\n\tfetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\n\tfetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\n\tfetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\n\tfetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\n\tfetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\n\tfetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\n\tfetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\n\tfetchDocumantaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`\n}\n\nexport default requests;","import React, { useEffect, useState } from 'react';\nimport './Navbar.css'\n\nfunction Navbar() {\n\n\tconst [show, handleShow] = useState(false)\n\n\tuseEffect(() => {\n\t\twindow.addEventListener('scroll', () => {\n\t\t\tif (window.scrollY > 100) {\n\t\t\t\thandleShow(true);\n\t\t\t} else {\n\t\t\t\thandleShow(false)\n\t\t\t}\n\t\t});\n\t\treturn () => {\n\t\t\twindow.removeEventListener('scroll');\n\t\t}\n\t}, [])\n\n\treturn (\n\t\t<div className={`nav ${show && \"nav__black\"}`}>\n\t\t\t<img\n\t\t\t\tsrc=\"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg\"\n\t\t\t\talt=\"Netflix-Logo\"\n\t\t\t\tclassName=\"nav__logo\"\n\t\t\t/>\n\t\t\t<img\n\t\t\t\tsrc=\"https://cdn-icons-png.flaticon.com/512/64/64572.png\"\n\t\t\t\talt=\"Navbar-Avatar\"\n\t\t\t\tclassName=\"nav__avatar\"\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nexport default Navbar","import React, { useEffect, useState } from 'react';\nimport axios from './axios';\nimport requests from './requests';\nimport './Banner.css';\n\nfunction Banner() {\n\tconst [movie, setMovie] = useState([]);\n\n\tuseEffect(() => {\n\t\tasync function fetchData() {\n\t\t\tconst request = await axios.get(requests.fetchNetflixOriginals);\n\t\t\tsetMovie(\n\t\t\t\trequest.data.results[Math.floor(Math.random() * request.data.results.length - 1)]\n\t\t\t);\n\t\t}\n\t\tfetchData()\n\t}, []);\n\n\tfunction truncate(str, n) {\n\t\treturn str?.length > n ? str.substr(0, n - 1) + \"...\" : str;\n\t}\n\n\treturn (\n\t\t<header className=\"banner\"\n\t\t\tstyle={{\n\t\t\t\tbackgroundSize: \"cover\",\n\t\t\t\tbackgroundImage: `url(\n\t\t\t\t\t\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\"\n\t\t\t\t)`,\n\t\t\t}}\n\t\t>\n\t\t\t<div className=\"banner__contents\">\n\t\t\t\t<h1 className=\"banner__title\">\n\t\t\t\t\t{movie?.title || movie?.name || movie?.original_name}\n\t\t\t\t</h1>\n\t\t\t\t<div className=\"banner__buttons\">\n\t\t\t\t\t<button className=\"banner__button\">Play</button>\n\t\t\t\t\t<button className=\"banner__button\">My List</button>\n\t\t\t\t</div>\n\t\t\t\t<h1 className=\"banner__description\">\n\t\t\t\t\t{truncate(movie?.overview, 150)}\n\t\t\t\t</h1>\n\t\t\t</div>\n\t\t\t<div className=\"banner__fadeBottom\"></div>\n\t\t</header>\n\t);\n}\n\nexport default Banner;","import './App.css';\nimport React from \"react\";\nimport Row from './Row';\nimport requests from './requests';\nimport Navbar from './Navbar';\nimport Banner from './Banner';\n\nfunction App() {\n\treturn (\n\t\t<div className=\"app\">\n\t\t\t<Navbar />\n\t\t\t<Banner />\n\t\t\t<Row\n\t\t\t\ttitle=\"Netflix Originals\"\n\t\t\t\tfetchUrl={requests.fetchNetflixOriginals}\n\t\t\t\tisLargeRow\n\t\t\t/>\n\t\t\t<Row\n\t\t\t\ttitle=\"Trending Now\"\n\t\t\t\tfetchUrl={requests.fetchTrending}\n\t\t\t/>\n\t\t\t<Row\n\t\t\t\ttitle=\"Top Rated\"\n\t\t\t\tfetchUrl={requests.fetchTopRated}\n\t\t\t/>\n\t\t\t<Row\n\t\t\t\ttitle=\"Action Movies\"\n\t\t\t\tfetchUrl={requests.fetchActionMovies}\n\t\t\t/>\n\t\t\t<Row\n\t\t\t\ttitle=\"Comedy Movies\"\n\t\t\t\tfetchUrl={requests.fetchComedyMovies}\n\t\t\t/>\n\t\t\t<Row\n\t\t\t\ttitle=\"Horror Movies\"\n\t\t\t\tfetchUrl={requests.fetchHorrorMovies}\n\t\t\t/>\n\t\t\t<Row\n\t\t\t\ttitle=\"Romance Movies\"\n\t\t\t\tfetchUrl={requests.fetchRomanceMovies}\n\t\t\t/>\n\t\t\t<Row\n\t\t\t\ttitle=\"Documentaries\"\n\t\t\t\tfetchUrl={requests.fetchDocumantaries}\n\t\t\t/>\n\t\t</div>\n\t)\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}